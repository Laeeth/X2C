#############################################################################
# Makefile for building: X2C
# Generated by qmake (2.01a) (Qt 4.7.4) on: pá 9 9 19:04:46 2011
# Project:  X2C.pro
# Template: app
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_NO_DEBUG -DQT_XML_LIB -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -m64 -pipe -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector --param=ssp-buffer-size=4 -D_FORTIFY_SOURCE=2 -fno-strict-aliasing -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -m64 -pipe -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector --param=ssp-buffer-size=4 -D_FORTIFY_SOURCE=2 -fno-strict-aliasing -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt/mkspecs/linux-g++-64 -I. -I/usr/include/QtCore -I/usr/include/QtGui -I/usr/include/QtXml -I/usr/include -Irelease
LINK          = g++
LFLAGS        = -m64 -Wl,-O1,--sort-common,--as-needed,-z,relro,--hash-style=gnu -Wl,-O1
LIBS          = $(SUBLIBS)  -L/usr/lib -lQtXml -lQtGui -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = release/

####### Files

SOURCES       = src/generator.cpp \
		src/elementUse.cpp \
		src/element.cpp \
		src/attributeUse.cpp \
		src/unionType.cpp \
		src/listType.cpp \
		src/objects.cpp \
		src/normalizer.cpp \
		src/utils.cpp \
		src/complexType.cpp \
		src/simpleType.cpp \
		src/type.cpp \
		src/attribute.cpp \
		src/settings.cpp \
		src/main.cpp 
OBJECTS       = release/generator.o \
		release/elementUse.o \
		release/element.o \
		release/attributeUse.o \
		release/unionType.o \
		release/listType.o \
		release/objects.o \
		release/normalizer.o \
		release/utils.o \
		release/complexType.o \
		release/simpleType.o \
		release/type.o \
		release/attribute.o \
		release/settings.o \
		release/main.o
DIST          = /usr/share/qt/mkspecs/common/g++.conf \
		/usr/share/qt/mkspecs/common/unix.conf \
		/usr/share/qt/mkspecs/common/linux.conf \
		/usr/share/qt/mkspecs/qconfig.pri \
		/usr/share/qt/mkspecs/modules/qt_phonon.pri \
		/usr/share/qt/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt/mkspecs/features/qt_functions.prf \
		/usr/share/qt/mkspecs/features/qt_config.prf \
		/usr/share/qt/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt/mkspecs/features/default_pre.prf \
		/usr/share/qt/mkspecs/features/release.prf \
		/usr/share/qt/mkspecs/features/debug_and_release.prf \
		/usr/share/qt/mkspecs/features/default_post.prf \
		/usr/share/qt/mkspecs/features/build_pass.prf \
		/usr/share/qt/mkspecs/features/warn_on.prf \
		/usr/share/qt/mkspecs/features/qt.prf \
		/usr/share/qt/mkspecs/features/unix/thread.prf \
		/usr/share/qt/mkspecs/features/moc.prf \
		/usr/share/qt/mkspecs/features/resources.prf \
		/usr/share/qt/mkspecs/features/uic.prf \
		/usr/share/qt/mkspecs/features/yacc.prf \
		/usr/share/qt/mkspecs/features/lex.prf \
		/usr/share/qt/mkspecs/features/include_source_dir.prf \
		X2C.pro
QMAKE_TARGET  = X2C
DESTDIR       = 
TARGET        = X2C

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile.Release $(TARGET)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

qmake:  FORCE
	@$(QMAKE) CONFIG+=debug_and_release -o Makefile.Release X2C.pro

dist: 
	@$(CHK_DIR_EXISTS) release/X2C1.0.0 || $(MKDIR) release/X2C1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) release/X2C1.0.0/ && $(COPY_FILE) --parents src/generator.h src/element.h src/elementUse.h src/attributeUse.h src/unionType.h src/listType.h src/objects.h src/utils.h src/normalizer.h src/complexType.h src/simpleType.h src/attribute.h src/type.h src/settings.h release/X2C1.0.0/ && $(COPY_FILE) --parents src/generator.cpp src/elementUse.cpp src/element.cpp src/attributeUse.cpp src/unionType.cpp src/listType.cpp src/objects.cpp src/normalizer.cpp src/utils.cpp src/complexType.cpp src/simpleType.cpp src/type.cpp src/attribute.cpp src/settings.cpp src/main.cpp release/X2C1.0.0/ && (cd `dirname release/X2C1.0.0` && $(TAR) X2C1.0.0.tar X2C1.0.0 && $(COMPRESS) X2C1.0.0.tar) && $(MOVE) `dirname release/X2C1.0.0`/X2C1.0.0.tar.gz . && $(DEL_FILE) -r release/X2C1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile.Release


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all:
compiler_moc_header_clean:
compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: 

####### Compile

release/generator.o: src/generator.cpp src/generator.h \
		src/objects.h \
		src/element.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/generator.o src/generator.cpp

release/elementUse.o: src/elementUse.cpp src/elementUse.h \
		src/element.h \
		src/utils.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/elementUse.o src/elementUse.cpp

release/element.o: src/element.cpp src/element.h \
		src/utils.h \
		src/attributeUse.h \
		src/attribute.h \
		src/type.h \
		src/simpleType.h \
		src/complexType.h \
		src/elementUse.h \
		src/settings.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/element.o src/element.cpp

release/attributeUse.o: src/attributeUse.cpp src/attributeUse.h \
		src/attribute.h \
		src/utils.h \
		src/simpleType.h \
		src/type.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/attributeUse.o src/attributeUse.cpp

release/unionType.o: src/unionType.cpp src/unionType.h \
		src/simpleType.h \
		src/type.h \
		src/attribute.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/unionType.o src/unionType.cpp

release/listType.o: src/listType.cpp src/listType.h \
		src/simpleType.h \
		src/type.h \
		src/attribute.h \
		src/utils.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/listType.o src/listType.cpp

release/objects.o: src/objects.cpp src/objects.h \
		src/element.h \
		src/utils.h \
		src/simpleType.h \
		src/type.h \
		src/attribute.h \
		src/listType.h \
		src/unionType.h \
		src/complexType.h \
		src/elementUse.h \
		src/attributeUse.h \
		src/stringType.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/objects.o src/objects.cpp

release/normalizer.o: src/normalizer.cpp src/normalizer.h \
		src/utils.h \
		src/settings.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/normalizer.o src/normalizer.cpp

release/utils.o: src/utils.cpp src/utils.h \
		src/settings.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/utils.o src/utils.cpp

release/complexType.o: src/complexType.cpp src/complexType.h \
		src/type.h \
		src/attribute.h \
		src/elementUse.h \
		src/element.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/complexType.o src/complexType.cpp

release/simpleType.o: src/simpleType.cpp src/simpleType.h \
		src/type.h \
		src/attribute.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/simpleType.o src/simpleType.cpp

release/type.o: src/type.cpp src/type.h \
		src/attribute.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/type.o src/type.cpp

release/attribute.o: src/attribute.cpp src/attribute.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/attribute.o src/attribute.cpp

release/settings.o: src/settings.cpp src/settings.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/settings.o src/settings.cpp

release/main.o: src/main.cpp src/simpleType.h \
		src/type.h \
		src/attribute.h \
		src/complexType.h \
		src/elementUse.h \
		src/element.h \
		src/settings.h \
		src/objects.h \
		src/utils.h \
		src/generator.h \
		src/normalizer.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/main.o src/main.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

